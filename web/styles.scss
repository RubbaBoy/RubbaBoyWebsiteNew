@import url(https://fonts.googleapis.com/css?family=Montserrat);

$primary: #171515;
$secondary: white;

$seek-node-color: $secondary;
$border-color: $secondary;
$section-color: $secondary;
$border-size: 3px;

$background-color: $primary;

body {
  margin: 0 auto;
  background-color: $background-color;
}

* {
  font-family: 'Montserrat', sans-serif;
  color: $secondary;
}

/* Loading square */

.loading-square {
  width: 100px;
  height: 100px;

  position: absolute;
  margin-left: 50vw;
  margin-top: 50vh;
  transform: translate(-50%, -50%);
}

.loading-stroke {
    stroke-dasharray: 53px;
    stroke-dashoffset: 0;
    animation: loading-stroke-move 2s linear 0ms infinite;
    fill: none;
    stroke: $secondary;
    stroke-width: 2px;
    stroke-linecap: square;
    stroke-linejoin: miter;
    stroke-opacity: 1;
    stroke-miterlimit: 4;
}

@keyframes loading-stroke-move {
  100% {
    stroke-dashoffset: 108px;
  }
}

/* End loading square */

/* Scroll bar */

body::-webkit-scrollbar {
  width: 3px;
}

body::-webkit-scrollbar-thumb {
  background-color: $secondary;
}

/* End scroll bar */

.links-bar {
  margin-top: -10px;

  i {
    opacity: 0;
    transform: translateY(0px);

    .loaded & {
      transform: translateY(20px);
      opacity: 1;
    }
  }

  &.ready i {
    transition: transform 150ms ease-out 0s !important;
  }


  a {
    margin: 0 10px;

    &:hover i {
      transform: translateY(17px);
    }
  }

  $i: 1;
  @while $i <= 4 {
    &.animations a:nth-child(#{$i}) i {
      transition: transform 500ms ease-out #{$i * 150 + 100}ms,
      opacity 500ms ease-out #{$i * 150 + 100}ms;
    }

    $i: $i + 1;
  }
}

p a {
  border-bottom: rgb(162, 160, 155) 1px dotted;
  text-decoration: none;

  &:hover {
    border-bottom: none;
    cursor: pointer;
  }
}

.section-container {
  padding-bottom: 50px;
}

.section-container .section:first-of-type p {
  z-index: 999;
}

.section-header {
  margin-left: 50px;
  opacity: 0;

  .active &,
  .active:nth-of-type(3) + .project-examples & {
    opacity: 1;
    transition: opacity 0.5s linear 0.75s;
  }
}

.bordered {
  box-shadow: inset 0 0 0 $border-size transparent;
}

.section {
  width: 100%;

  transition: color 0.25s;

  background: none;
  box-sizing: border-box;
  margin: 1em;
  padding: 1em 2em;

  color: transparent;
  font-size: inherit;

  position: relative;
  vertical-align: middle;

  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
  align-items: stretch;

  p {
    margin-bottom: 32px;
  }

  .bordered &::before,
  .bordered &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 0;
    height: 0;

    border: $border-size solid transparent;
    transition-duration: 0.25s;
  }

  .bordered &::before {
    top: 0;
    left: 0;
  }

  .bordered &::after {
    bottom: 0;
    right: 0;
  }

  & p {
    opacity: 0;
  }

  .active & p,
  .active:nth-of-type(3) + .project-examples & p {
    opacity: 1;
    transition: opacity 0.5s linear 0.25s;
  }

  .bordered.active &::before,
  .bordered.active &::after,
  .bordered.active:nth-of-type(3) + .project-examples &::before,
  .bordered.active:nth-of-type(3) + .project-examples &::after {
    width: 100%;
    height: 100%;
  }

  .bordered.active &::before,
  .bordered.active:nth-of-type(3) + .project-examples &::before {
    border-top-color: $border-color;
    border-right-color: $border-color;
    transition: width 0.25s ease-out,
    height 0.25s ease-out 0.25s;
  }

  .bordered.active &::after,
  .bordered.active:nth-of-type(3) + .project-examples &::after {
    border-bottom-color: $border-color;
    border-left-color: $border-color;
    transition: border-color 0s ease-out 0.5s,
    width 0.25s ease-out 0.5s,
    height 0.25s ease-out 0.75s;
  }
}

/* Info card */

.info-card {
  max-width: 150px;
  min-width: 100px;
  position: relative;
  margin: 0 auto;
  padding: 0 15px;

  h3 {
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 10px;
    opacity: 0;
  }

  p::before {
    max-width: 150px;
    width: 0;

    box-shadow: 0 -7px 0 -4px $secondary;
    padding-top: 10px;
    margin-top: 7px;
    content: "";
    position: absolute;
    top: 24px;

    transition: width 0.25s ease-out;
  }

  p {
    opacity: 0;
    transition: opacity 0.25s ease-out;
  }

  .active & h3 {
    opacity: 1;
    transition: opacity 0.25s ease-out;
  }

  .active & p::before {
    width: 100%;
  }

  .active & p {
    opacity: 1;
  }
}

$i: 1;
@while $i < 10 {
  $card: '.section .info-card:nth-child(#{$i})';
  $project-card: '.project-card:nth-child(#{$i})';
  $special-button: '.special-button:nth-child(#{$i})';
   #{$card}, #{$card} h3, #{$card} p, #{$card} p::before {
    transition-delay: #{(0.5 + ($i * 0.25)) + 's'} !important;
  }

  #{$project-card}, #{$project-card} h2, #{$project-card} p,
  #{$special-button} {
    transition-delay: #{($i * 0.25) + 's'} !important;
  }

  $first: ($i - 1) * 0.25;
  $second: $first + 0.25;
  .bordered.active:nth-of-type(3):not(.special-button) + .project-examples #{$project-card} .section::before {
    border-top-color: $border-color !important;
    border-right-color: $border-color !important;
    transition: border-color 0s ease-out #{$first + 's'},
    width 0.25s ease-out #{$first + 's'},
    height 0.25s ease-out #{$second + 's'} !important;
  }

  $third: $second + 0.25;
  $fourth: $third + 0.25;

  .bordered.active:nth-of-type(3):not(.special-button) + .project-examples #{$project-card} .section::after {
    border-bottom-color: $border-color !important;
    border-left-color: $border-color !important;
    transition: border-color 0s ease-out #{$third + 's'},
    width 0.25s ease-out #{$third + 's'},
    height 0.25s ease-out #{$fourth + 's'} !important;
  }

  $i: $i + 1;
}

$i: 1;
@while $i <= 2 {
  $special-button: '.special-button:nth-child(#{$i})';

  #{$special-button} {
    transition: color 0.25s ease-out #{($i * 0.25) + 's'} !important;
    &::before, &::after {
      transition: border-color 0.25s ease-out #{($i * 0.25) + 's'},
      width 0s ease-out #{($i * 0.25 + 0.25) + 's'},
      height 0s ease-out #{($i * 0.25 + 0.25) + 's'};
    }
  }

  #{$special-button}.active {
    transition: color 0.15s ease-out #{($i * 0.25) + 's'} !important;

    $first: ($i - 1) * 0.25;
    $second: $first + 0.25;
    &::before {
      border-top-color: $border-color !important;
      border-right-color: $border-color !important;
      transition: border-color 0s ease-out #{$first + 's'},
      width 0.25s ease-out #{$first + 's'},
      height 0.25s ease-out #{$second + 's'} !important;
    }

    $third: $second + 0.25;
    $fourth: $third + 0.25;
    &::after {
      border-bottom-color: $border-color !important;
      border-left-color: $border-color !important;
      transition: border-color 0s ease-out #{$third + 's'},
      width 0.25s ease-out #{$third + 's'},
      height 0.25s ease-out #{$fourth + 's'} !important;
    }
  }

  $i: $i + 1;
}

/* End of info card */

/* Project info card */

.project-examples {
  width: 100%;

  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}

.project-card {
  width: 300px;
  display: inline-block;
  margin-bottom: 75px;

  & .section {
    overflow: hidden;
    height: calc(100% - 64px);
  }

  & .expand-hidden {
    z-index: 999;
    position: absolute;
    bottom: 25px;
  }
}

/* End project info card */

/* Button */

.button {
  border: $border-size solid $border-color;
  background-color: $primary;
  font-size: 16px;
  padding: 5px 10px;
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
}

.special-button {
  font-size: 16px;
  padding: 8px 13px;
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
  position: relative;

  color: $background-color;

  &:nth-child(1) {
    margin-right: 5px;
  }

  &:nth-child(2) {
    margin-left: 5px;
  }

  &.active {
    color: $secondary;
  }

  .bordered &::before,
  .bordered &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 0;
    height: 0;

    border: $border-size solid transparent;
    transition-duration: 0.25s;
  }

  .bordered &::before {
    top: 0;
    left: 0;
  }

  .bordered &::after {
    bottom: 0;
    right: 0;
  }

  &.active::before,
  &.active::after {
    width: calc(100% - 6px);
    height: calc(100% - 6px);
    transition: opacity 1s linear;
  }
}

/* End Button */

//$break-xsmall: 768px;
$break-small: 768px;
$break-medium: 992px;
$break-large: 1200px;
$break-xlarge: 1600px;

@mixin respond-to($media) {
  @if $media == xsmall {
    @media only screen and (max-width: $break-small - 1) { @content; }
  }
  @else if $media == small {
    @media only screen and (min-width: $break-small) { @content; }
  }
  @else if $media == medium {
    @media only screen and (min-width: $break-medium) { @content; }
  }
  @else if $media == large {
    @media only screen and (min-width: $break-large) { @content; }
  }
  @else if $media == xlarge {
    @media only screen and (min-width: $break-xlarge) { @content; }
  }
}

#content {
  @include respond-to(xsmall) {
    width: 90vw !important;
    margin-left: 5vw !important;
  }

  @include respond-to(small) {
    width: 80vw !important;
    margin-left: 10vw !important;
  }

  @include respond-to(medium) {
    width: 70vw !important;
    margin-left: 15vw !important;
  }

  @include respond-to(large) {
    width: 60vw !important;
    margin-left: 20vw !important;
  }

  @include respond-to(xlarge) {
    width: 50vw !important;
    margin-left: 25vw !important;
  }
}

.inner-content {
  @include respond-to(xsmall) {
    width: 90vw !important;
  }

  @include respond-to(small) {
    width: 80vw !important;
  }

  @include respond-to(medium) {
    width: 70vw !important;
  }

  @include respond-to(large) {
    width: 60vw !important;
  }

  @include respond-to(xlarge) {
    width: 50vw !important;
  }
}