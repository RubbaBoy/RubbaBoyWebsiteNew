@import url(https://fonts.googleapis.com/css?family=Roboto);
@import url(https://fonts.googleapis.com/css?family=Montserrat);
@import url(https://fonts.googleapis.com/css?family=Material+Icons);

$primary: black;
$secondary: white;

$seek-node-color: $secondary;
$border-color: $secondary;
$section-color: $secondary;
$border-size: 3px;

$background-color: $primary;

body {
  margin: 0 auto;
  background-color: $background-color;
}

* {
  font-family: 'Montserrat', sans-serif;
  color: $secondary;
}

.section-container {
  padding-bottom: 50px;
}

.section-header {
  margin-left: 50px;
  opacity: 0;

  .active & {
    opacity: 1;
    transition: opacity 0.5s linear 0.75s;
  }
}

.section-container:last-of-type {
  margin-bottom: 1000px;
}

.bordered {
  box-shadow: inset 0 0 0 $border-size transparent;
}

.section {
  width: 100%;

  transition: color 0.25s;

  background: none;
  box-sizing: border-box;
  margin: 1em;
  padding: 1em 2em;

  color: transparent;
  font-size: inherit;

  position: relative;
  vertical-align: middle;

  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;

  .bordered &::before,
  .bordered &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 0;
    height: 0;

    border: $border-size solid transparent;
    transition-duration: 0.25s;
  }

  .bordered &::before {
    top: 0;
    left: 0;
  }

  .bordered &::after {
    bottom: 0;
    right: 0;
  }

  & p {
    opacity: 0;
  }

  .active & p {
    opacity: 1;
    transition: opacity 0.5s linear 0.25s;
  }

  .bordered.active &::before,
  .bordered.active &::after {
    width: 100%;
    height: 100%;
  }

  .bordered.active &::before {
    border-top-color: $border-color;
    border-right-color: $border-color;
    transition: width 0.25s ease-out,
    height 0.25s ease-out 0.25s;
  }

  .bordered.active &::after {
    border-bottom-color: $border-color;
    border-left-color: $border-color;
    transition: border-color 0s ease-out 0.5s,
    width 0.25s ease-out 0.5s,
    height 0.25s ease-out 0.75s;
  }
}

/* Info card */

.info-card {
  max-width: 150px;
  min-width: 100px;
  position: relative;
  margin: 0 auto;

  h3 {
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 10px;
    opacity: 0;
  }

  p::before {
    max-width: 150px;
    width: 0;

    box-shadow: 0 -7px 0 -4px white;
    padding-top: 10px;
    margin-top: 7px;
    content: "";
    position: absolute;
    top: 24px;

    transition: width 0.25s ease-out;
  }

  p {
    opacity: 0;

    transition: opacity 0.25s ease-out;
  }

  .active & h3 {
    opacity: 1;

    transition: opacity 0.25s ease-out;
  }

  .active & p::before {
    width: 100%;
  }

  .active & p {
    opacity: 1;
  }
}

$i: 1;
@while $i < 10 {
  $card: '.section .info-card:nth-child(#{$i})';
   #{$card}, #{$card} h3, #{$card} p, #{$card} p::before {
    transition-delay: #{(0.5 + ($i * 0.25)) + 's'} !important;
  }

  $i: $i + 1;
}

/* End of info card */

$break-small: 600px;
$break-large: 1024px;

@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $break-large - 1) { @content; }
  }
  @else if $media == wide-screens {
    @media only screen and (min-width: $break-large) { @content; }
  }
}

#content {
  @include respond-to(handhelds) {
    width: 80vw !important;
    margin-left: 10vw !important;
  }

  @include respond-to(wide-screens) {
    width: 50vw !important;
    margin-left: 25vw !important;
  }
}

.inner-content {
  @include respond-to(handhelds) {
    width: 80vw !important;
  }

  @include respond-to(wide-screens) {
    width: 50vw !important;
  }
}